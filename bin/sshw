#!/usr/bin/env bash

function select_server() {
  local display_entries=()
  local hostnames=()

  while IFS= read -r line; do
    [[ -z "$line" || "$line" == \#* ]] && continue
    ip=$(awk '{print $1}' <<<"$line")
    name=$(awk '{print $2}' <<<"$line")
    if [[ -n "$ip" && -n "$name" ]]; then
      display_entries+=("$name ($ip)")
      hostnames+=("$name")
    fi
  done <"${HOME}/work/hostlist/hosts"

  if [[ ${#display_entries[@]} -eq 0 ]]; then
    echo "ERROR: valid hosts found."
    return 1
  fi

  if ! command -v fzf >/dev/null; then
    echo "ERROR: fzf not installed."
    return 1
  fi

  # Multi-select via fzf
  selected=$(printf '%s\n' "${display_entries[@]}" | fzf --multi --prompt="Choose host(s): ")

  [[ -z "$selected" ]] && echo "⚠️ No host selected. Exiting." && return 1

  ssh_targets=()
  while IFS= read -r line; do
    for i in "${!display_entries[@]}"; do
      if [[ "$line" == "${display_entries[$i]}" ]]; then
        ssh_targets+=("${hostnames[$i]}")
        break
      fi
    done
  done <<<"$selected"

  [[ ${#ssh_targets[@]} -eq 0 ]] && echo "ERROR: No valid SSH targets. Exiting." && return 1

  echo "SSHing into:"
  for t in "${ssh_targets[@]}"; do
    echo " - $t"
  done

  session_name="tmux-sshw"

  # Kill previous session if still alive
  tmux has-session -t "$session_name" 2>/dev/null && tmux kill-session -t "$session_name"

  tmux new-session -d -s "$session_name"

  first_server="${ssh_targets[0]}"
  tmux send-keys -t "$session_name" "ssh $first_server; tmux kill-session -t $session_name" C-m

  for server in "${ssh_targets[@]:1}"; do
    tmux split-window -t "$session_name" -h
    tmux send-keys -t "$session_name" "ssh $server; tmux kill-session -t $session_name" C-m
    sleep 0.2
  done

  tmux select-layout -t "$session_name" tiled
  tmux set-window-option -t "$session_name" synchronize-panes on
  tmux attach -t "$session_name"
}

select_server
